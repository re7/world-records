<?php

namespace App\Bundle\MainBundle\Entity\Record;

use Doctrine\ORM\EntityRepository;

/**
 * RecordRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecordRepository extends EntityRepository
{
    /**
     * Save the given entity in database
     *
     * @param Record $record
     */
    public function save(Record $record)
    {
        $this->getEntityManager()->persist($record);
        $this->getEntityManager()->flush($record);
    }

    /**
     * Retrieve world records having the given identifiers
     *
     * @param int[] $identifiers
     *
     * @return Record[]
     */
    public function findCollection(array $identifiers)
    {
        $builder = $this->createQueryBuilder('record');
        $builder
            ->where('record.identifier IN (:identifiers)')
            ->setParameter('identifiers', $identifiers)
        ;

        return $builder->getQuery()->getResult();
    }

    /**
     * Retrieve world records identifiers ordered by creation date DESC, for the
     * given limit and offset
     *
     * @param int $limit
     * @param int $offset
     *
     * @return int[]
     */
    public function paginateByDate($limit, $offset = 0)
    {
        $builder = $this->createQueryBuilder('record');
        $builder
            ->select('record.identifier')
            ->orderBy('record.createdAt', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit)
        ;

        $arrayResult = $builder->getQuery()->getScalarResult();

        $result = [];
        foreach ($arrayResult as $array) {
            $result[] = $array['identifier'];
        }

        return $result;
    }
}
